"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[682],{5162:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(7294),r=a(4334),i="tabItem_Ymn6";function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:a},t)}},5488:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(3117),r=a(7294),i=a(4334),o=a(2389),l=a(7392),s=a(7094),u=a(2466),m="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:a,block:o,defaultValue:d,values:c,groupId:f,className:k}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=c??g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),b=(0,l.l)(h,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===d?d:d??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==N&&!h.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:_,setTabGroupChoices:v}=(0,s.U)(),[y,C]=(0,r.useState)(N),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=f){const e=_[f];null!=e&&e!==y&&h.some((t=>t.value===e))&&C(e)}const x=e=>{const t=e.currentTarget,a=T.indexOf(t),n=h[a].value;n!==y&&(E(t),C(n),null!=f&&v(f,String(n)))},w=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;a=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;a=T[t]??T[T.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",m)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":o},k)},h.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,key:t,ref:e=>T.push(e),onKeyDown:w,onFocus:x,onClick:x},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":y===t})}),a??t)}))),a?(0,r.cloneElement)(g.filter((e=>e.props.value===y))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==y})))))}function c(e){const t=(0,o.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},501:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var n=a(3117),r=(a(7294),a(3905)),i=a(5488),o=a(5162);a(6066);const l={sidebar_position:6,title:"fseval.config.EstimatorConfig"},s="EstimatorConfig",u={unversionedId:"config/EstimatorConfig",id:"config/EstimatorConfig",title:"fseval.config.EstimatorConfig",description:"Configures an estimator: a Feature Ranker, Feature Selector or a validation",source:"@site/docs/config/EstimatorConfig.mdx",sourceDirName:"config",slug:"/config/EstimatorConfig",permalink:"/fseval/docs/config/EstimatorConfig",draft:!1,editUrl:"https://github.com/dunnkers/fseval/tree/website/docs/config/EstimatorConfig.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"fseval.config.EstimatorConfig"},sidebar:"tutorialSidebar",previous:{title:"fseval.config.ResampleConfig",permalink:"/fseval/docs/config/ResampleConfig"},next:{title:"fseval.config.StorageConfig",permalink:"/fseval/docs/config/StorageConfig"}},m={},p=[{value:"Examples",id:"examples",level:2},{value:"<kbd>Ranker</kbd> ReliefF",id:"ranker-relieff",level:3},{value:"<kbd>Ranker</kbd> Boruta",id:"ranker-boruta",level:3},{value:"<kbd>Validator</kbd> k-NN",id:"validator-k-nn",level:3},{value:"More examples",id:"more-examples",level:2}],d={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"estimatorconfig"},"EstimatorConfig"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class fseval.config.EstimatorConfig(\n    name: str=MISSING, \n    estimator: Any=None, \n    load_cache: Optional[CacheUsage]=CacheUsage.allow, \n    save_cache: Optional[CacheUsage]=CacheUsage.allow, \n    _estimator_type: str=MISSING, \n    multioutput: bool=False, \n    multioutput_only: bool=False, \n    requires_positive_X: bool=False, \n    estimates_feature_importances: bool=False, \n    estimates_feature_support: bool=False, \n    estimates_feature_ranking: bool=False, \n    estimates_target: bool=False,\n)\n")),(0,r.kt)("p",null,"Configures an estimator: a Feature Ranker, Feature Selector or a validation\nestimator."),(0,r.kt)("p",null,"In the case of Feature Rankers/Selectors, set one of\n",(0,r.kt)("inlineCode",{parentName:"p"},"estimates_feature_importances"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"estimates_feature_support")," or\n",(0,r.kt)("inlineCode",{parentName:"p"},"estimates_feature_ranking")," to True. In the case of a validation estimator,\nset ",(0,r.kt)("inlineCode",{parentName:"p"},"estimates_target")," to True."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")," : str"),(0,r.kt)("td",{parentName:"tr",align:null},"Human-friendly name of this estimator.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"estimator")," : Any"),(0,r.kt)("td",{parentName:"tr",align:null},"The estimator. Must be a dictionary with a key ",(0,r.kt)("inlineCode",{parentName:"td"},"_target_"),", pointing to the class that is to be instantiated. All other properties in the dictionary will be passed to the estimator constructor. e.g")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"load_cache")," : Optional[",(0,r.kt)("a",{parentName:"td",href:"../../types/CacheUsage"},"CacheUsage"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"How to handle loading a cached version of the estimator, in a pickle file. e.g. to ignore cache, or force using it. To be used in combination with ",(0,r.kt)("inlineCode",{parentName:"td"},"PipelineConfig.storage"),". See ",(0,r.kt)("a",{parentName:"td",href:"../../types/CacheUsage"},"CacheUsage"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"save_cache")," : Optional[",(0,r.kt)("a",{parentName:"td",href:"../../types/CacheUsage"},"CacheUsage"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"How to handle saving the fit estimator as a pickle file, such to facilitate caching. To be used in combination with ",(0,r.kt)("inlineCode",{parentName:"td"},"PipelineConfig.storage"),". See ",(0,r.kt)("a",{parentName:"td",href:"../../types/CacheUsage"},"CacheUsage"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_estimator_type")," : str"),(0,r.kt)("td",{parentName:"tr",align:null},"Either 'classifier', 'regressor' or 'clusterer'. See the ",(0,r.kt)("a",{parentName:"td",href:"https://scikit-learn.org/stable/developers/develop.html#estimator-types"},"sklearn"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"multioutput")," : bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether this estimator supports multioutput datasets.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"multioutput_only")," : bool"),(0,r.kt)("td",{parentName:"tr",align:null},"If this estimator ",(0,r.kt)("strong",{parentName:"td"},"only")," supports multioutput datasets.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"requires_positive_X")," : bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the estimator fails if X contains negative values.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"estimates_feature_importances")," : bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the estimator estimates feature importances. For example, in the case of 2 features, the estimator can set ",(0,r.kt)("inlineCode",{parentName:"td"},"self.feature_importances_ = [0.9, 0.1]"),", implying the estimator found the first feature the most useful. Alternatively, the ",(0,r.kt)("inlineCode",{parentName:"td"},"coef_")," attribute can also be read and interpreted as a feature importance vector.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"estimates_feature_support")," : bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the estimator estimates feature support. A feature support vector indicates which features to include in a feature subset yes/no. In other words, it must be a boolean vector. It is to be set on the estimator ",(0,r.kt)("inlineCode",{parentName:"td"},"support_")," attribute. Estimating the feature support ",(0,r.kt)("inlineCode",{parentName:"td"},"vector")," : s synonymous with performing feature selection. e.g ",(0,r.kt)("inlineCode",{parentName:"td"},"self.support_ = [True, False]"),", meaning to include only the first feature in a feature subset.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"estimates_feature_ranking")," : bool"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the estimator ranks the features in a specific order. Is similar to feature importance, but does not estimate exact importance quantities, i.e. that are proportional to each other. An ",(0,r.kt)("inlineCode",{parentName:"td"},"estimator")," : an set the ranking using the ",(0,r.kt)("inlineCode",{parentName:"td"},"ranking_")," attribute. e.g ",(0,r.kt)("inlineCode",{parentName:"td"},"self.ranking_ = [1, 0]"),", such to indicate that the first feature ranks the highest.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Example config for ReliefF feature selection using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/EpistasisLab/scikit-rebate"},"skrebate"),":"),(0,r.kt)("h3",{id:"ranker-relieff"},(0,r.kt)("kbd",null,"Ranker")," ReliefF"),(0,r.kt)(i.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'{5} title="conf/ranker/relieff.yaml"',"{5}":!0,title:'"conf/ranker/relieff.yaml"'},"name: ReliefF\nestimator:\n  _target_: skrebate.ReliefF\n_estimator_type: classifier\nestimates_feature_importances: true\n"))),(0,r.kt)(o.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\nfrom fseval.config import EstimatorConfig\n\ncs = ConfigStore.instance()\n\nrelieff = EstimatorConfig(\n    name="ReliefF",\n    estimator=dict(\n        _target_="skrebate.ReliefF"\n    ),\n    _estimator_type="classifier",\n    # highlight-next-line\n    estimates_feature_importances=True,\n)\ncs.store(group="ranker", name="relieff", node=relieff)\n')))),(0,r.kt)("p",null,"Then use with ",(0,r.kt)("inlineCode",{parentName:"p"},"ranker=relieff")," on the commandline."),(0,r.kt)("h3",{id:"ranker-boruta"},(0,r.kt)("kbd",null,"Ranker")," Boruta"),(0,r.kt)("p",null,"Example config for Boruta using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/scikit-learn-contrib/boruta_py"},"boruta_py"),":"),(0,r.kt)(i.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'{9-11} title="conf/ranker/boruta.yaml"',"{9-11}":!0,title:'"conf/ranker/boruta.yaml"'},"name: Boruta\nestimator:\n  _target_: boruta.boruta_py.BorutaPy\n  estimator:\n    _target_: sklearn.ensemble.RandomForestClassifier\n  n_estimators: auto\n_estimator_type: classifier\nmultioutput: false\nestimates_feature_importances: false\nestimates_feature_support: true\nestimates_feature_ranking: true\n"))),(0,r.kt)(o.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\nfrom fseval.config import EstimatorConfig\n\ncs = ConfigStore.instance()\n\nboruta = EstimatorConfig(\n    name="Boruta",\n    estimator=dict(\n        _target_="boruta.boruta_py.BorutaPy",\n        estimator=dict(\n            _target_="sklearn.ensemble.RandomForestClassifier"\n        ),\n        n_estimators="auto"\n    ),\n    _estimator_type="classifier",\n    multioutput=False,\n    # highlight-start\n    estimates_feature_importances=False,\n    estimates_feature_support=True,\n    estimates_feature_ranking=True,\n    # highlight-end\n)\ncs.store(group="ranker", name="boruta", node=boruta)\n')))),(0,r.kt)("p",null,"Then use with ",(0,r.kt)("inlineCode",{parentName:"p"},"ranker=boruta")," on the commandline."),(0,r.kt)("h3",{id:"validator-k-nn"},(0,r.kt)("kbd",null,"Validator")," k-NN"),(0,r.kt)("p",null,"Example config for a validation estimator, e.g. ",(0,r.kt)("a",{parentName:"p",href:"https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html"},"k-NN"),":"),(0,r.kt)(i.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'{6} title="conf/validator/knn.yaml"',"{6}":!0,title:'"conf/validator/knn.yaml"'},"name: k-NN\nestimator:\n  _target_: sklearn.neighbors.KNeighborsClassifier\n_estimator_type: classifier\nmultioutput: false\nestimates_target: true\n"))),(0,r.kt)(o.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\nfrom fseval.config import EstimatorConfig\n\ncs = ConfigStore.instance()\n\nknn = EstimatorConfig(\n    name="k-NN",\n    estimator=dict(\n        _target_="sklearn.neighbors.KNeighborsClassifier",\n    ),\n    _estimator_type="classifier",\n    multioutput=False,\n    # highlight-next-line\n    estimates_target=True,\n)\ncs.store(group="ranker", name="knn", node=knn)\n')))),(0,r.kt)("p",null,"Then use with ",(0,r.kt)("inlineCode",{parentName:"p"},"validator=knn")," on the commandline."),(0,r.kt)("h2",{id:"more-examples"},"More examples"),(0,r.kt)("p",null,"See more example definitions of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/dunnkers/fseval/tree/master/tests/integration/conf/ranker"},"rankers")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/dunnkers/fseval/tree/master/tests/integration/conf/validator"},"validators")," in the repository."))}c.isMDXComponent=!0}}]);