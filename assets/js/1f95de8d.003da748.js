"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[322],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),r=n(4334),l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(3117),r=n(7294),l=n(4334),o=n(2389),i=n(7392),s=n(7094),c=n(2466),u="tabList__CuJ",d="tabItem_LNqP";function p(e){var t;const{lazy:n,block:o,defaultValue:p,values:m,groupId:f,className:v}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=m??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,i.l)(k,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===p?p:p??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==h&&!k.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:C}=(0,s.U)(),[N,_]=(0,r.useState)(h),O=[],{blockElementScrollPositionUntilNextRender:w}=(0,c.o5)();if(null!=f){const e=y[f];null!=e&&e!==N&&k.some((t=>t.value===e))&&_(e)}const T=e=>{const t=e.currentTarget,n=O.indexOf(t),a=k[n].value;a!==N&&(w(t),_(a),null!=f&&C(f,String(a)))},V=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]??O[O.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},v)},k.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>O.push(e),onKeyDown:V,onFocus:T,onClick:T},o,{className:(0,l.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,r.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,o.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},9874:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return d}});var a=n(3117),r=(n(7294),n(3905)),l=n(5488),o=n(5162);const i={sidebar_position:4,title:"fseval.config.CrossValidatorConfig"},s="CrossValidatorConfig",c={unversionedId:"config/CrossValidatorConfig",id:"config/CrossValidatorConfig",title:"fseval.config.CrossValidatorConfig",description:"Cross Validation is used to improve the reliability of the ranking and validation results. A CV method can be defined like so:",source:"@site/docs/config/CrossValidatorConfig.mdx",sourceDirName:"config",slug:"/config/CrossValidatorConfig",permalink:"/fseval/docs/config/CrossValidatorConfig",draft:!1,editUrl:"https://github.com/dunnkers/fseval/tree/website/docs/config/CrossValidatorConfig.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"fseval.config.CrossValidatorConfig"},sidebar:"tutorialSidebar",previous:{title:"fseval.config.DatasetConfig",permalink:"/fseval/docs/config/DatasetConfig"},next:{title:"fseval.config.ResampleConfig",permalink:"/fseval/docs/config/ResampleConfig"}},u={},d=[{value:"Available CV methods",id:"available-cv-methods",level:2},{value:"K-Fold CV",id:"k-fold-cv",level:3},{value:"Train/test split",id:"traintest-split",level:3},{value:"\u2699\ufe0f Custom CV",id:"\ufe0f-custom-cv",level:3}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"crossvalidatorconfig"},"CrossValidatorConfig"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class fseval.config.CrossValidatorConfig(\n    name: str=MISSING, \n    splitter: Any=None, \n    fold: int=0,\n)\n")),(0,r.kt)("p",null,"Cross Validation is used to improve the reliability of the ranking and validation results. A CV method can be defined like so:"),(0,r.kt)("p",null,"Provides an interface as how to define a Cross Validation method. The CV is applied\nat the beginning of the pipeline, so both the ranker and validator only get to see\nthe ",(0,r.kt)("strong",{parentName:"p"},"training")," dataset. The test dataset is used for scoring, i.e. for determining\nthe validation estimator scores."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")," : str"),(0,r.kt)("td",{parentName:"tr",align:null},"Human-friendly name for this CV method.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"splitter")," : Any"),(0,r.kt)("td",{parentName:"tr",align:null},"The cross validation splitter function. Must contain a ",(0,r.kt)("inlineCode",{parentName:"td"},"_target_")," attribute which instantiates to an object that has a ",(0,r.kt)("inlineCode",{parentName:"td"},"split")," method with the following signature ",(0,r.kt)("inlineCode",{parentName:"td"},"def split(self, X, y=None, groups=None)"),". See ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/scikit-learn/scikit-learn/blob/main/sklearn/model_selection/_split.py#L60"},"BaseCrossValidator")," and ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/scikit-learn/scikit-learn/blob/main/sklearn/model_selection/_split.py#L1573"},"BaseShuffleSplit"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fold")," : int"),(0,r.kt)("td",{parentName:"tr",align:null},"The fold to use in this specific run of the pipeline. e.g. you can use ",(0,r.kt)("inlineCode",{parentName:"td"},"python my_benchmark.py --multirun cv=kfold cv.splitter.n_spits=5 cv.fold=range(0,5)")," to run a complete 5-fold CV scheme.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"available-cv-methods"},"Available CV methods"),(0,r.kt)("p",null,"Built-in to fseval are ",(0,r.kt)("inlineCode",{parentName:"p"},"kfold")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"train_test_split"),"."),(0,r.kt)("h3",{id:"k-fold-cv"},"K-Fold CV"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cv=kfold")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/kfold.yaml"',title:'"conf/cv/kfold.yaml"'},"name: K-Fold\nsplitter:\n  _target_: sklearn.model_selection.KFold\n  n_splits: 5\n  shuffle: True\n  random_state: 0\n")),(0,r.kt)("p",null,"For example: to use 10-fold CV, set ",(0,r.kt)("inlineCode",{parentName:"p"},"cv.splitter.n_splits=10"),"."),(0,r.kt)("h3",{id:"traintest-split"},"Train/test split"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cv=train_test_split")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/train_test_split.yaml"',title:'"conf/cv/train_test_split.yaml"'},"name: Train/test split\nsplitter:\n  _target_: sklearn.model_selection.ShuffleSplit\n  n_splits: 1\n  test_size: 0.25\n  random_state: 0\n")),(0,r.kt)("h3",{id:"\ufe0f-custom-cv"},"\u2699\ufe0f Custom CV"),(0,r.kt)("p",null,"For example, we can implement Leave One Out cross validation like so:"),(0,r.kt)(l.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/loocv.yaml"',title:'"conf/cv/loocv.yaml"'},"name: Leave One Out\nsplitter:\n    _target_: sklearn.model_selection.LeaveOneOut\n"))),(0,r.kt)(o.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\n\nloocv = CrossValidatorConfig(\n    name="Leave One Out",\n    splitter=dict(\n        _target_="sklearn.model_selection.LeaveOneOut",\n    )\n)\n\ncs = ConfigStore.instance()\ncs.store(name="loocv", node=loocv, group="cv")\n')))),(0,r.kt)("p",null,"Which can then be used by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"cv=loocv")," in the commandline."))}m.isMDXComponent=!0}}]);