"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[238],{5162:function(e,t,a){a.d(t,{Z:function(){return i}});var n=a(7294),r=a(4334),l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},5488:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(3117),r=a(7294),l=a(4334),i=a(2389),o=a(7392),s=a(7094),d=a(2466),u="tabList__CuJ",p="tabItem_LNqP";function m(e){var t;const{lazy:a,block:i,defaultValue:m,values:c,groupId:f,className:g}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=c??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),N=(0,o.l)(h,((e,t)=>e.value===t.value));if(N.length>0)throw new Error(`Docusaurus error: Duplicate values "${N.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const b=null===m?m:m??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==b&&!h.some((e=>e.value===b)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${b}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:y}=(0,s.U)(),[C,_]=(0,r.useState)(b),S=[],{blockElementScrollPositionUntilNextRender:w}=(0,d.o5)();if(null!=f){const e=v[f];null!=e&&e!==C&&h.some((t=>t.value===e))&&_(e)}const I=e=>{const t=e.currentTarget,a=S.indexOf(t),n=h[a].value;n!==C&&(w(t),_(n),null!=f&&y(f,String(n)))},x=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;a=S[t]??S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;a=S[t]??S[S.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":i},g)},h.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>S.push(e),onKeyDown:x,onFocus:I,onClick:I},i,{className:(0,l.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":C===t})}),a??t)}))),a?(0,r.cloneElement)(k.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function c(e){const t=(0,i.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},2158:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return u},metadata:function(){return m},toc:function(){return f}});var n=a(3117),r=(a(7294),a(3905)),l=a(5488),i=a(5162),o=a(6066),s=a(3221),d=a(6572);const u={sidebar_position:0,title:"fseval.config.PipelineConfig"},p="PipelineConfig",m={unversionedId:"config/PipelineConfig",id:"config/PipelineConfig",title:"fseval.config.PipelineConfig",description:"The complete configuration needed to run the fseval pipeline.",source:"@site/docs/config/PipelineConfig.mdx",sourceDirName:"config",slug:"/config/PipelineConfig",permalink:"/fseval/docs/config/PipelineConfig",draft:!1,editUrl:"https://github.com/dunnkers/fseval/tree/website/docs/config/PipelineConfig.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,title:"fseval.config.PipelineConfig"},sidebar:"tutorialSidebar",previous:{title:"fseval.main",permalink:"/fseval/docs/main"},next:{title:"fseval.config.DatasetConfig",permalink:"/fseval/docs/config/DatasetConfig"}},c={},f=[{value:"Examples",id:"examples",level:2}],g={toc:f};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pipelineconfig"},"PipelineConfig"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'class fseval.config.PipelineConfig(\n    dataset: DatasetConfig=MISSING,   \n    cv: CrossValidatorConfig=MISSING,\n    resample: ResampleConfig=MISSING,\n    ranker: EstimatorConfig=MISSING,\n    validator: EstimatorConfig=MISSING,\n    storage: StorageConfig=MISSING,\n    callbacks: Dict[str, Any]=field(default_factory=lambda: {}),\n    metrics: Dict[str, Any]=field(default_factory=lambda: {}),\n    n_bootstraps: int=1,\n    n_jobs: Optional[int]=1,\n    all_features_to_select: str="range(1, min(50, p) + 1)",\n    defaults: List[Any] = field(\n        default_factory=lambda: [\n            "_self_",\n            {"dataset": MISSING},\n            {"cv": "kfold"},\n            {"resample": "shuffle"},\n            {"ranker": MISSING},\n            {"validator": MISSING},\n            {"storage": "local"},\n            {"callbacks": []},\n            {"metrics": ["feature_importances", "ranking_scores", "validation_scores"]},\n            {"override hydra/job_logging": "colorlog"},\n            {"override hydra/hydra_logging": "colorlog"},\n        ]\n    )\n)\n')),(0,r.kt)("p",null,"The complete configuration needed to run the fseval pipeline."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dataset")," : ",(0,r.kt)("a",{parentName:"td",href:"../DatasetConfig"},"DatasetConfig")),(0,r.kt)("td",{parentName:"tr",align:null},"Determines the dataset to use for this experiment.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"cv")," : ",(0,r.kt)("a",{parentName:"td",href:"../CrossValidatorConfig"},"CrossValidatorConfig")),(0,r.kt)("td",{parentName:"tr",align:null},"The CV method and split to use in this experiment.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"resample")," : ",(0,r.kt)("a",{parentName:"td",href:"../ResampleConfig"},"ResampleConfig")),(0,r.kt)("td",{parentName:"tr",align:null},"Dataset resampling; e.g. with or without replacement.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ranker")," : ",(0,r.kt)("a",{parentName:"td",href:"../EstimatorConfig"},"EstimatorConfig")),(0,r.kt)("td",{parentName:"tr",align:null},"A Feature Ranker or Feature Selector.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"validator")," : ",(0,r.kt)("a",{parentName:"td",href:"../EstimatorConfig"},"EstimatorConfig")),(0,r.kt)("td",{parentName:"tr",align:null},"Some estimator to validate the feature subsets.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"storage")," : ",(0,r.kt)("a",{parentName:"td",href:"../StorageConfig"},"StorageConfig")),(0,r.kt)("td",{parentName:"tr",align:null},"A storage method used to store the fit estimators.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"callbacks")," : Dict","[str, Any]"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../callbacks"},"Callbacks"),". Provide hooks for storing the config or results.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metrics")," : Dict","[str, Any]"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"../metrics"},"Metrics")," allow custom computation after any pipeline stage.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"n_bootstraps")," : int"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of 'bootstraps' to run. A bootstrap means running the pipeline again but with a resampled (see ",(0,r.kt)("inlineCode",{parentName:"td"},"resample"),") version of the dataset. This allows estimating stability, for example.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"n_jobs")," : Optional","[int]"),(0,r.kt)("td",{parentName:"tr",align:null},"Amount of CPU's to use for computing each bootstrap. This thus distributes the amount of bootstraps over CPU's.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"all_features_to_select")," : str"),(0,r.kt)("td",{parentName:"tr",align:null},"Determines the feature subsets to validate with the validation estimator. The format of this parameter is a string that can contain an arbitrary Python expression, that must evaluate to a ",(0,r.kt)("inlineCode",{parentName:"td"},"List[int]")," object. Each number in the list is passed to the ",(0,r.kt)("inlineCode",{parentName:"td"},"sklearn.feature_selection.SelectFromModel")," as the ",(0,r.kt)("inlineCode",{parentName:"td"},"max_features")," parameter. ",(0,r.kt)("ul",null,(0,r.kt)("li",null," For example: ",(0,r.kt)("inlineCode",{parentName:"td"},'all_features_to_select="[1, 2]"')," means two feature subsets are evaluated with the validation estimator - the first with only the highest ranked feature and the second with the two highest ranked features. "),(0,r.kt)("li",null,"For example: ",(0,r.kt)("inlineCode",{parentName:"td"},'all_features_to_select="range(1, p + 1)"')," means that ",(0,r.kt)("em",{parentName:"td"},"all")," feature subsets are evaluated. "))," By default, this parameter is set to ",(0,r.kt)("inlineCode",{parentName:"td"},'all_features_to_select="range(1, min(50, p) + 1)"'),", meaning at most 50 subsets containing the highest ranked features are validated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"defaults")," : List","[Any]"),(0,r.kt)("td",{parentName:"tr",align:null},"Default values for the above. See Hydra docs on ",(0,r.kt)("a",{parentName:"td",href:"https://hydra.cc/docs/tutorials/structured_config/defaults/"},"Defaults List"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("p",null,"Experiments can be configured in two ways."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Using ",(0,r.kt)("strong",{parentName:"li"},"YAML")," files stored in a directory"),(0,r.kt)("li",{parentName:"ol"},"Using ",(0,r.kt)("strong",{parentName:"li"},"Python")," (",(0,r.kt)("a",{parentName:"li",href:"https://hydra.cc/docs/tutorials/structured_config/intro/"},"Structured Configs"),")")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)(l.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,r.kt)(o.Z,{className:"language-yaml",title:"conf/my_config.yaml",mdxType:"CodeBlock"},s.Z)),(0,r.kt)(i.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,r.kt)(o.Z,{className:"language-py",title:"conf/my_config.py",mdxType:"CodeBlock"},d.Z))),(0,r.kt)("p",null,"Using the ",(0,r.kt)("em",{parentName:"p"},"override")," keyword is required when overriding a config ",(0,r.kt)("strong",{parentName:"p"},"group"),". See more ",(0,r.kt)("a",{parentName:"p",href:"https://hydra.cc/docs/next/upgrades/1.0_to_1.1/defaults_list_override/#internaldocs-banner"},"here"),"."))}k.isMDXComponent=!0},6572:function(e,t){t.Z='from omegaconf import MISSING\n\nfrom fseval.config import PipelineConfig\n\n# To set PipelineConfig defaults in a Structured Config, we must redefine the entire\n# defaults list.\nmy_config = PipelineConfig(\n    n_bootstraps=1,\n    defaults=[\n        "_self_",\n        # highlight-next-line\n        {"dataset": "synthetic"},\n        {"cv": "kfold"},\n        {"resample": "shuffle"},\n        {"ranker": MISSING},\n        # highlight-next-line\n        {"validator": "knn"},\n        {"storage": "local"},\n        # highlight-next-line\n        {"callbacks": ["to_sql"]},\n        {"metrics": ["feature_importances", "ranking_scores", "validation_scores"]},\n        {"override hydra/job_logging": "colorlog"},\n        {"override hydra/hydra_logging": "colorlog"},\n    ],\n)\n'},3221:function(e,t){t.Z="defaults:\n  - base_pipeline_config\n  - _self_\n  - override dataset: synthetic\n  - override validator: knn\n  - override /callbacks:\n      - to_sql\n\nn_bootstraps: 1\n"}}]);